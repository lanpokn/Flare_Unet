# Test/Evaluation Configuration for Event-Voxel Deflare
# Used for evaluating trained models on test datasets

# Data loading configuration
loaders:
  # Test dataset configuration
  dataset: EventVoxelDataset
  # Test data paths (using actual test data directories)
  test_path:
    noisy: "/mnt/e/2025/event_flick_flare/main/output/data_simu/physics_method/background_with_flare_events_test"
    clean: "/mnt/e/2025/event_flick_flare/main/output/data_simu/physics_method/background_with_light_events_test"
  
  # DataLoader parameters for testing
  batch_size: 1           # Usually 1 for testing to process each sample individually
  num_workers: 4          # Number of data loading workers
  
  # Preprocessing (should match training)
  transformer:
    test:
      - name: Normalize   # Same normalization as training

# Dataset configuration (must match training)
dataset:
  sensor_size: [480, 640]      # Sensor resolution (H, W)
  segment_duration_us: 20000   # 20ms per segment
  num_bins: 8                  # 8 temporal bins per segment  
  num_segments: 5              # 5 segments per 100ms file

# Model configuration (must match training model exactly)
model:
  name: ResidualUNet3D
  # Model architecture (MUST match training config exactly)
  in_channels: 1
  out_channels: 1
  f_maps: 8                 # Match training: reduced from 32 to 8
  layer_order: gcr
  num_groups: 2             # Match training: reduced from 8 to 2
  num_levels: 2             # Match training: reduced from 4 to 2
  final_sigmoid: true       # 强制设为true，代码中会替换为Identity
  conv_kernel_size: 3
  pool_kernel_size: 2
  
  # Path to trained model checkpoint
  path: checkpoints/event_voxel_deflare/best_checkpoint.pytorch

# Predictor configuration
predictor:
  name: StandardPredictor
  
  # Output configuration
  output_dir: test_results/event_voxel_denoising
  
  # Save predictions
  save_segmentation: false    # For regression, we save raw predictions
  
  # Prediction parameters
  patch: null                 # Use full volume (no patching for our small 8x480x640 volumes)
  
  # Post-processing
  keep_predictions: true      # Keep prediction files for analysis

# Evaluation metrics
eval_metric:
  # Primary metrics for denoising evaluation
  - name: MeanSquaredError    # MSE between predicted and ground truth
  - name: PSNR               # Peak Signal-to-Noise Ratio  
  - name: MeanAbsoluteError   # L1 error
  
  # Optional advanced metrics
  # - name: SSIM              # Structural Similarity Index (if available)

# Device configuration
device: cuda                 # Use GPU for faster inference

# Logging configuration
logger:
  name: TensorBoardLogger
  log_dir: logs/test_event_voxel_denoising

# Optional: Additional test settings
inference:
  # Test-time augmentation (usually disabled)
  test_time_augmentation: false
  
  # Batch processing for efficiency
  mirror: false
  
  # Output format
  output_format: pt          # Save predictions as PyTorch tensors