# Inference Configuration for Standalone Event Denoising
# Used for processing single H5 event files without ground truth

# Model configuration (must match trained model exactly)
model:
  name: UNet3D
  # Architecture parameters (MUST match training config)
  in_channels: 1
  out_channels: 1  
  f_maps: 32
  layer_order: gcr
  num_groups: 8
  num_levels: 4
  final_sigmoid: false
  conv_kernel_size: 3
  pool_kernel_size: 2
  
  # Path to trained model checkpoint  
  path: checkpoints/event_voxel_denoising/best_checkpoint.pytorch

# Inference-specific configuration
inference:
  # Data processing parameters (must match training)
  sensor_size: [480, 640]      # Sensor resolution (H, W)
  segment_duration_us: 20000   # 20ms per segment  
  num_bins: 8                  # 8 temporal bins per segment
  num_segments: 5              # 5 segments per 100ms input file
  
  # Device configuration
  device: cuda                 # Use GPU if available, fallback to CPU
  
  # Processing parameters
  batch_size: 1                # Process segments individually for safety
  
  # Output configuration
  output_format: h5            # Save denoised events as H5 files
  
  # Reconstruction parameters for voxelâ†’events conversion
  reconstruction:
    # Total duration for reconstructed events (matches segment processing)
    total_duration_us: 20000   # 20ms per segment
    
    # Decoding strategy
    decoding_method: uniform_random  # Uniform random distribution within time bins
    
    # Quality control
    preserve_event_count: false  # Allow event count to vary (denoising effect)
    min_events_per_bin: 0       # Minimum events per time bin
    max_events_per_bin: 10000   # Maximum events per time bin (prevent explosion)

# Visualization options (optional, for debugging)
visualization:
  enabled: false                # Enable visualization output
  output_dir: inference_debug   # Directory for visualization outputs
  
  # What to visualize
  show_input_events: true       # Visualize input events
  show_output_events: true      # Visualize denoised events  
  show_voxel_comparison: true   # Show input vs output voxels
  
  # Visualization parameters
  segment_to_visualize: 1       # Which segment to visualize (0-4)
  
# Logging configuration
logging:
  level: INFO                   # Logging level (DEBUG, INFO, WARNING, ERROR)
  output_file: inference.log   # Log file path (null = console only)
  
# Performance options
performance:
  # Memory management
  clear_cache: true             # Clear GPU cache between segments
  
  # Multi-threading
  num_workers: 2                # Number of workers for data loading
  
  # Optimization
  use_mixed_precision: false    # Use automatic mixed precision (experimental)

# Error handling
error_handling:
  # What to do on processing errors
  skip_failed_segments: true    # Skip segments that fail to process
  fallback_to_input: false     # If processing fails, output original events
  
  # Validation
  validate_output: true         # Basic validation of output events
  
# File I/O settings
io:
  # Temporary files
  temp_dir: /tmp/event_inference  # Temporary directory for processing
  cleanup_temp: true              # Clean up temporary files after processing
  
  # Output file naming
  output_suffix: _denoised        # Suffix for output files
  preserve_filename: true         # Keep original filename with suffix